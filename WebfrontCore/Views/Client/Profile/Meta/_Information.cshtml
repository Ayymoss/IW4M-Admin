@model IEnumerable<SharedLibraryCore.Dtos.Meta.Responses.InformationResponse>
@{
    var informationMeta = Model
        .Where(meta => meta.Type == SharedLibraryCore.Interfaces.MetaType.Information)
        .OrderBy(meta => meta.Order)
        .Select((meta, i) => new { index = i, meta })
        .GroupBy(meta => meta.index / 5);
}

@foreach (var metaColumn in informationMeta)
{
    <div class="mr-20">
        @foreach (var meta in metaColumn)
        {
            <div class="profile-meta-entry font-size-12" data-toggle="@(!string.IsNullOrEmpty(meta.meta.ToolTipText) ? "tooltip" : "")" data-title="@meta.meta.ToolTipText" data-placement="bottom">

                @{var results = Utilities.SplitTranslationTokens(meta.meta.Key);}

                @if (results.Any(_result => _result.IsInterpolation))
                {
                    foreach (var result in results)
                    {
                        if (result.IsInterpolation)
                        {
                            <span class="profile-meta-value text-primary"><color-code value="@meta.meta.Value"></color-code></span>
                        }

                        else
                        {
                            <span class="profile-meta-title text-muted">@result.MatchValue</span>
                        }
                    }
                }

                else
                {
                    <span class="profile-meta-value text-primary"><color-code value="@meta.meta.Value"></color-code></span>
                    <span class="profile-meta-title text-muted">@meta.meta.Key</span>
                }
            </div>
        }
    </div>
}
